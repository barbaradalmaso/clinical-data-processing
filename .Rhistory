getwd()
quarto::quarto_render()
install.packages('quarto')
library(quarto)
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
# First shiny app using teal and clinical data
# Finally, I will create tables, graphs and lists (TGLs) using the clinical data
# Load packages
library(tidyverse)
library(rtables)
library(ggplot2)
# Load datasets
adsl <- read.csv("adsl.csv")
adlb <- read.csv("adlb.csv")
# ---------------------------- Demographics / Baseline Characteristics (ADSL) ------------------------
# ----------------------------------------------------------------------------------------------------
# Table N per ARMCD/SEX/RACE
# Change sex labels for graph
adsl_lbl <- adsl %>%
dplyr::mutate(
SEX = dplyr::recode(SEX,
"M" = "Male",
"F" = "Female"))
adsl_lbl <- adsl_lbl %>%
dplyr::mutate(
RACE = dplyr::recode(RACE,
"WHITE" = "White",
"NON-WHITE" = "Non-white"))
# Create basic rtable
tbl <- basic_table(show_colcounts = TRUE) %>%
split_cols_by("ARM") %>%
add_overall_col("TOTAL") %>%
split_rows_by("SEX",
split_label = "Subject Sex",
label_pos = "topleft") %>%
summarize_row_groups() %>%
analyze("AGE",
var_labels = "Age (years)",
afun = function(x, .N_col) {
m <- mean(x, na.rm = TRUE)
med <- median(x, na.rm = TRUE)
q1 <- quantile(x, 0.25, na.rm = TRUE)
q3 <- quantile(x, 0.75, na.rm = TRUE)
mi <- min(x, na.rm = TRUE)
ma <- max(x, na.rm = TRUE)
in_rows(
"Mean"     = sprintf("%.1f", m),
"Median"   = sprintf("%.1f", med),
"Q1"       = sprintf("%.1f", q1),
"Q3"       = sprintf("%.1f", q3),
"Min"      = sprintf("%.1f", mi),
"Max"      = sprintf("%.1f", ma)
)
}) %>%
analyze("RACE", var_labels = "Race",
afun = function(x, .N_col) {
tab <- table(x)
res <- sprintf("%d (%.1f%%)", tab, 100 * tab / .N_col)
in_rows(.list = as.list(res), .labels = names(tab))
})
tbl_final <- build_table(tbl, adsl_lbl)
# Titles & Footers
main_title(tbl_final) <- "Demographics and Baseline Characteristics of Patients with Acquired Immunodeficiency Syndrome (AIDS) by Treatment Arm."
subtitles(tbl_final) <- "Summary of sex, age, and race distribution in the Safety Population."
main_footer(tbl_final) <- c("Mean = arithmetic average; Median = 50th percentile; Q1/Q3 = 25th and 75th percentiles; Min/Max = extreme values.")
prov_footer(tbl_final) <- "Safety Population includes all randomized patients with AIDS who received at least one dose of study treatment."
tbl_final
# Graphs
# Sex percentage per group
ggplot(adsl_lbl, aes(x = ARMCD, fill = SEX)) +
geom_bar(position = "fill", color = "white", width = 0.5, alpha = 0.7) +
scale_y_continuous(labels = scales::percent) +
scale_fill_manual(values = c("Male" = "#B3B3B3", "Female" = "#A6D854")) +
labs(title = "Sex Distribution by Treatment Arm",
x = "Treatment Arm", y = "Percentage",
fill = "Sex") +
theme_minimal(base_size = 12) +
theme(
panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.y = element_line(color = "grey90"),
legend.position = "top",
legend.title = element_blank(),
plot.title = element_text(hjust = 0.5, face = "bold")
)
# Race summary
ggplot(adsl_lbl, aes(x = ARMCD, fill = RACE)) +
geom_bar(position = "fill", color = "white", width = 0.5,  alpha = 0.7) +
scale_y_continuous(labels = scales::percent) +
scale_fill_manual(values = c("White" = "#66C2A5", "Non-white" = "#FC8D62")) +
labs(title = "Race Distribution by Treatment Arm",
x = "Treatment Arm", y = "Percentage",
fill = "Race") +
theme_minimal(base_size = 12) +
theme(
panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.y = element_line(color = "grey90"),
legend.position = "top",
legend.title = element_blank(),
plot.title = element_text(hjust = 0.5, face = "bold")
)
# Age summary
ggplot(adsl, aes(x = AGE, fill = ARM)) +
geom_histogram(binwidth = 5, position = "dodge", alpha = 0.7) +
scale_fill_brewer(palette = "Set2") +  # paleta discreta
labs(
title = "Age Distribution by Treatment Arm",
x = "Age (years)",
y = "Number of Patients",
fill = "Treatment Arm"
) +
theme_minimal(base_size = 12) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
legend.position = "top",
legend.title = element_text(face = "bold"),
panel.grid.minor = element_blank()
)
# ---------------------------- ADLB – Laboratory Measurements ----------------------------------------
# ----------------------------------------------------------------------------------------------------
# Merge lab data from adsl to adlb
adlb_merged <- adlb %>%
left_join(
adsl %>% select(USUBJID, SYMPTOM, HEMO, KARNOF, IVDRUG),
by = "USUBJID"
)
adlb_merged$VISIT <- factor(adlb_merged$VISIT, levels = c("Baseline", "20±5 weeks")) # Order patient visit as baseline first
# Create basic rtable
tbl_lab <- basic_table(show_colcounts = TRUE) %>%
split_cols_by("VISIT") %>%
split_rows_by("ARM",
split_label = "Treatment arm",
label_pos = "topleft") %>%
split_rows_by("PARAM",
split_label = "Laboratory test",
label_pos = "topleft") %>%
analyze("AVAL", var_labels = "Value (AVAL)",
afun = function(x, .N_col) {
in_rows(
"Mean"   = sprintf("%.1f", mean(x, na.rm = TRUE)),
"Median" = sprintf("%.1f", median(x, na.rm = TRUE)),
"Q1"     = sprintf("%.1f", quantile(x, 0.25, na.rm = TRUE)),
"Q3"     = sprintf("%.1f", quantile(x, 0.75, na.rm = TRUE)),
"Min"    = sprintf("%.1f", min(x, na.rm = TRUE)),
"Max"    = sprintf("%.1f", max(x, na.rm = TRUE))
)
})
tbl_lab <- build_table(tbl_lab, adlb_merged)
# Titles & Footers
main_title(tbl_lab) <- "Laboratory Test Results of Patients with Acquired Immunodeficiency Syndrome (AIDS) by Treatment Arm"
subtitles(tbl_lab) <- "Summary statistics (Mean, Median, Q1, Q3, Min, Max) for immunological laboratory parameters at each visit"
main_footer(tbl_lab) <- c(
"Mean = arithmetic average; Median = 50th percentile; Q1/Q3 = 25th and 75th percentiles; Min/Max = extreme values.")
prov_footer(tbl_lab) <- "Safety Population includes all randomized patients with AIDS who had laboratory assessments at baseline and follow-up visits."
tbl_lab
# Average laboratory values by treatment arm
adlb_summary <- adlb_merged %>%
group_by(ARM, PARAM) %>%
summarise(mean_val = mean(AVAL, na.rm = TRUE), .groups = "drop")
ggplot(adlb_summary, aes(x = PARAM, y = mean_val, fill = ARM)) +
geom_col(position = "dodge", alpha = 0.8) +
scale_fill_brewer(palette = "Set2") +
labs(
title = "Mean Laboratory Values by Treatment Arm",
x = "Laboratory Parameter",
y = "Mean Value",
fill = "Treatment Arm"
) +
theme_minimal(base_size = 12) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.text.x = element_text(angle = 30, hjust = 1, face = "bold"),
legend.position = "top",
legend.title = element_text(face = "bold")
)
getwd()
ggplot(adlb_merged, aes(x = PARAM, y = AVAL, fill = ARM)) +
geom_col(data = adlb_summary, aes(x = PARAM, y = mean_val, fill = ARM),
position = position_dodge(width = 0.8), alpha = 0.6) +  # barras de média
geom_jitter(aes(color = ARM),
position = position_jitterdodge(jitter.width = 0.15, dodge.width = 0.8),
size = 2, alpha = 0.7, show.legend = FALSE) +  # pontos individuais
scale_fill_brewer(palette = "Set2") +
scale_color_brewer(palette = "Set2") +
labs(
title = "Mean Laboratory Values and Individual Patient Measurements by Treatment Arm",
x = "Laboratory Parameter",
y = "Value",
fill = "Treatment Arm"
) +
theme_minimal(base_size = 12) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.text.x = element_text(angle = 30, hjust = 1, face = "bold"),
legend.position = "top",
legend.title = element_text(face = "bold")
)
# Create graph to show T cell counts by treatment
# Average laboratory values by treatment arm
ggplot(adlb_merged, aes(x = PARAM, y = AVAL, fill = ARM)) +
geom_col(data = adlb_summary, aes(x = PARAM, y = mean_val, fill = ARM),
position = position_dodge(width = 0.8), alpha = 0.6) +  # barras de média
geom_jitter(aes(color = ARM),
position = position_jitterdodge(jitter.width = 0.15, dodge.width = 0.8),
size = 0.5, alpha = 0.9, show.legend = FALSE) +  # pontos individuais
scale_fill_brewer(palette = "Set2") +
scale_color_brewer(palette = "Set2") +
labs(
title = "Mean Laboratory Values and Individual Patient Measurements by Treatment Arm",
x = "Laboratory Parameter",
y = "Value",
fill = "Treatment Arm"
) +
theme_minimal(base_size = 12) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.text.x = element_text(angle = 30, hjust = 1, face = "bold"),
legend.position = "top",
legend.title = element_text(face = "bold")
)
# Create graph to show T cell counts by treatment
# Average laboratory values by treatment arm
ggplot(adlb_merged, aes(x = PARAM, y = AVAL, fill = ARM)) +
geom_col(data = adlb_summary, aes(x = PARAM, y = mean_val, fill = ARM),
position = position_dodge(width = 0.8), alpha = 0.6) +  # barras de média
geom_jitter(aes(color = ARM),
position = position_jitterdodge(jitter.width = 0.15, dodge.width = 0.8),
size = 0.5, alpha = 0.1, show.legend = FALSE) +  # pontos individuais
scale_fill_brewer(palette = "Set2") +
scale_color_brewer(palette = "Set2") +
labs(
title = "Mean Laboratory Values and Individual Patient Measurements by Treatment Arm",
x = "Laboratory Parameter",
y = "Value",
fill = "Treatment Arm"
) +
theme_minimal(base_size = 12) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.text.x = element_text(angle = 30, hjust = 1, face = "bold"),
legend.position = "top",
legend.title = element_text(face = "bold")
)
# Create graph to show T cell counts by treatment
# Average laboratory values by treatment arm
ggplot(adlb_merged, aes(x = PARAM, y = AVAL, fill = ARM)) +
geom_col(data = adlb_summary, aes(x = PARAM, y = mean_val, fill = ARM),
position = position_dodge(width = 0.8), alpha = 0.6) +  # barras de média
geom_jitter(aes(color = ARM),
position = position_jitterdodge(jitter.width = 0.15, dodge.width = 0.8),
size = 0.5, alpha = 0.5, show.legend = FALSE) +  # pontos individuais
scale_fill_brewer(palette = "Set2") +
scale_color_brewer(palette = "Set2") +
labs(
title = "Mean Laboratory Values and Individual Patient Measurements by Treatment Arm",
x = "Laboratory Parameter",
y = "Value",
fill = "Treatment Arm"
) +
theme_minimal(base_size = 12) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.text.x = element_text(angle = 30, hjust = 1, face = "bold"),
legend.position = "top",
legend.title = element_text(face = "bold")
)
# Create graph to show T cell counts by treatment
# Average laboratory values by treatment arm
ggplot(adlb_merged, aes(x = PARAM, y = AVAL, fill = ARM)) +
geom_col(data = adlb_summary, aes(x = PARAM, y = mean_val, fill = ARM),
position = position_dodge(width = 0.8), alpha = 0.6) +  # barras de média
geom_jitter(aes(color = ARM),
position = position_jitterdodge(jitter.width = 0.15, dodge.width = 0.8),
size = 1, alpha = 0.5, show.legend = FALSE) +  # pontos individuais
scale_fill_brewer(palette = "Set2") +
scale_color_brewer(palette = "Set2") +
labs(
title = "Mean Laboratory Values and Individual Patient Measurements by Treatment Arm",
x = "Laboratory Parameter",
y = "Value",
fill = "Treatment Arm"
) +
theme_minimal(base_size = 12) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.text.x = element_text(angle = 30, hjust = 1, face = "bold"),
legend.position = "top",
legend.title = element_text(face = "bold")
)
# First shiny app using teal and clinical data
# Finally, I will create tables, graphs and lists (TGLs) using the clinical data
# Load packages
library(tidyverse)
library(rtables)
library(ggplot2)
# Load datasets
adsl <- read.csv("adsl.csv")
adlb <- read.csv("adlb.csv")
# ---------------------------- Demographics / Baseline Characteristics (ADSL) ------------------------
# ----------------------------------------------------------------------------------------------------
# Table N per ARMCD/SEX/RACE
# Change sex labels for graph
adsl_lbl <- adsl %>%
dplyr::mutate(
SEX = dplyr::recode(SEX,
"M" = "Male",
"F" = "Female"))
adsl_lbl <- adsl_lbl %>%
dplyr::mutate(
RACE = dplyr::recode(RACE,
"WHITE" = "White",
"NON-WHITE" = "Non-white"))
# Create basic rtable
tbl <- basic_table(show_colcounts = TRUE) %>%
split_cols_by("ARM") %>%
add_overall_col("TOTAL") %>%
split_rows_by("SEX",
split_label = "Subject Sex",
label_pos = "topleft") %>%
summarize_row_groups() %>%
analyze("AGE",
var_labels = "Age (years)",
afun = function(x, .N_col) {
m <- mean(x, na.rm = TRUE)
med <- median(x, na.rm = TRUE)
q1 <- quantile(x, 0.25, na.rm = TRUE)
q3 <- quantile(x, 0.75, na.rm = TRUE)
mi <- min(x, na.rm = TRUE)
ma <- max(x, na.rm = TRUE)
in_rows(
"Mean"     = sprintf("%.1f", m),
"Median"   = sprintf("%.1f", med),
"Q1"       = sprintf("%.1f", q1),
"Q3"       = sprintf("%.1f", q3),
"Min"      = sprintf("%.1f", mi),
"Max"      = sprintf("%.1f", ma)
)
}) %>%
analyze("RACE", var_labels = "Race",
afun = function(x, .N_col) {
tab <- table(x)
res <- sprintf("%d (%.1f%%)", tab, 100 * tab / .N_col)
in_rows(.list = as.list(res), .labels = names(tab))
})
tbl_final <- build_table(tbl, adsl_lbl)
# Titles & Footers
main_title(tbl_final) <- "Demographics and Baseline Characteristics of Patients with Acquired Immunodeficiency Syndrome (AIDS) by Treatment Arm."
subtitles(tbl_final) <- "Summary of sex, age, and race distribution in the Safety Population."
main_footer(tbl_final) <- c("Mean = arithmetic average; Median = 50th percentile; Q1/Q3 = 25th and 75th percentiles; Min/Max = extreme values.")
prov_footer(tbl_final) <- "Safety Population includes all randomized patients with AIDS who received at least one dose of study treatment."
tbl_final
# Graphs
# Sex percentage per group
ggplot(adsl_lbl, aes(x = ARMCD, fill = SEX)) +
geom_bar(position = "fill", color = "white", width = 0.5, alpha = 0.7) +
scale_y_continuous(labels = scales::percent) +
scale_fill_manual(values = c("Male" = "#B3B3B3", "Female" = "#A6D854")) +
labs(title = "Sex Distribution by Treatment Arm",
x = "Treatment Arm", y = "Percentage",
fill = "Sex") +
theme_minimal(base_size = 12) +
theme(
panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.y = element_line(color = "grey90"),
legend.position = "top",
legend.title = element_blank(),
plot.title = element_text(hjust = 0.5, face = "bold")
)
# Race summary
ggplot(adsl_lbl, aes(x = ARMCD, fill = RACE)) +
geom_bar(position = "fill", color = "white", width = 0.5,  alpha = 0.7) +
scale_y_continuous(labels = scales::percent) +
scale_fill_manual(values = c("White" = "#66C2A5", "Non-white" = "#FC8D62")) +
labs(title = "Race Distribution by Treatment Arm",
x = "Treatment Arm", y = "Percentage",
fill = "Race") +
theme_minimal(base_size = 12) +
theme(
panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.y = element_line(color = "grey90"),
legend.position = "top",
legend.title = element_blank(),
plot.title = element_text(hjust = 0.5, face = "bold")
)
# Age summary
ggplot(adsl, aes(x = AGE, fill = ARM)) +
geom_histogram(binwidth = 5, position = "dodge", alpha = 0.7) +
scale_fill_brewer(palette = "Set2") +  # paleta discreta
labs(
title = "Age Distribution by Treatment Arm",
x = "Age (years)",
y = "Number of Patients",
fill = "Treatment Arm"
) +
theme_minimal(base_size = 12) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
legend.position = "top",
legend.title = element_text(face = "bold"),
panel.grid.minor = element_blank()
)
# ---------------------------- ADLB – Laboratory Measurements ----------------------------------------
# ----------------------------------------------------------------------------------------------------
# Merge lab data from adsl to adlb
adlb_merged <- adlb %>%
left_join(
adsl %>% select(USUBJID, SYMPTOM, HEMO, KARNOF, IVDRUG),
by = "USUBJID"
)
adlb_merged$VISIT <- factor(adlb_merged$VISIT, levels = c("Baseline", "20±5 weeks")) # Order patient visit as baseline first
# Create basic rtable
tbl_lab <- basic_table(show_colcounts = TRUE) %>%
split_cols_by("VISIT") %>%
split_rows_by("ARM",
split_label = "Treatment arm",
label_pos = "topleft") %>%
split_rows_by("PARAM",
split_label = "Laboratory test",
label_pos = "topleft") %>%
analyze("AVAL", var_labels = "Value (AVAL)",
afun = function(x, .N_col) {
in_rows(
"Mean"   = sprintf("%.1f", mean(x, na.rm = TRUE)),
"Median" = sprintf("%.1f", median(x, na.rm = TRUE)),
"Q1"     = sprintf("%.1f", quantile(x, 0.25, na.rm = TRUE)),
"Q3"     = sprintf("%.1f", quantile(x, 0.75, na.rm = TRUE)),
"Min"    = sprintf("%.1f", min(x, na.rm = TRUE)),
"Max"    = sprintf("%.1f", max(x, na.rm = TRUE))
)
})
tbl_lab <- build_table(tbl_lab, adlb_merged)
# Titles & Footers
main_title(tbl_lab) <- "Laboratory Test Results of Patients with Acquired Immunodeficiency Syndrome (AIDS) by Treatment Arm"
subtitles(tbl_lab) <- "Summary statistics (Mean, Median, Q1, Q3, Min, Max) for immunological laboratory parameters at each visit"
main_footer(tbl_lab) <- c(
"Mean = arithmetic average; Median = 50th percentile; Q1/Q3 = 25th and 75th percentiles; Min/Max = extreme values.")
prov_footer(tbl_lab) <- "Safety Population includes all randomized patients with AIDS who had laboratory assessments at baseline and follow-up visits."
tbl_lab
# Create graph to show T cell counts by treatment
# Average laboratory values by treatment arm
adlb_summary <- adlb_merged %>%
group_by(ARM, PARAM) %>%
summarise(mean_val = mean(AVAL, na.rm = TRUE), .groups = "drop")
ggplot(adlb_merged, aes(x = PARAM, y = AVAL, fill = ARM)) +
geom_col(data = adlb_summary, aes(x = PARAM, y = mean_val, fill = ARM),
position = position_dodge(width = 0.8), alpha = 0.6) +  # barras de média
geom_jitter(aes(color = ARM),
position = position_jitterdodge(jitter.width = 0.15, dodge.width = 0.8),
size = 1, alpha = 0.5, show.legend = FALSE) +  # pontos individuais
scale_fill_brewer(palette = "Set2") +
scale_color_brewer(palette = "Set2") +
labs(
title = "Mean Laboratory Values and Individual Patient Measurements by Treatment Arm",
x = "Laboratory Parameter",
y = "Value",
fill = "Treatment Arm"
) +
theme_minimal(base_size = 12) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.text.x = element_text(angle = 30, hjust = 1, face = "bold"),
legend.position = "top",
legend.title = element_text(face = "bold")
)
quarto::quarto_render()
