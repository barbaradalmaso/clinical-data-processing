{"title":"Clinical Data Transformation Pipeline","markdown":{"yaml":{"title":"Clinical Data Transformation Pipeline","format":"html","toc":true,"toc-depth":4},"headingText":"SDTM Domains Overview","headingAttr":{"id":"sdtm-overview","classes":[],"keyvalue":[]},"containsRefs":false,"markdown":"\n\n\n\nThe SDTM (Study Data Tabulation Model) organizes clinical trial data into standardized domains, facilitating analysis and reporting. Each domain captures specific information about study participants, such as demographics, medical history, clinical assessments, and laboratory results.\n\n<div class=\"content-box\">\n\n### Demographics (DM) domain\n\nThis domain contains basic participant information, as:\n\n-   `USUBJID`: Unique subject identifier.\n-   `AGE`: Participant's age.\n-   `SEX`: Sex (Male/Female).\n-   `RACE`: Race (White/Non-white).\n-   `ARM` / `ARMCD`: Treatment arm assigned.\n\nTo check how to transform raw clinical data into a DM domain, click to show code.\n\n```{r, message=FALSE, warning=FALSE, echo=TRUE}\n\n# load packages\nlibrary(tidyverse)\nlibrary(lubridate) \n\n# Load aids dataset (obtained at Kaggle: https://www.kaggle.com/datasets/tanshihjen/aids-clinical-trials)\naids_df <- read_csv(\"data/AIDS_ClinicalTrial_GroupStudy175.csv\")\n\n# The aids_df is a hypothetical clinical trial data set. So first, I'll adapt it to be similar to a SDTM, by doing derivations\n\ndm <- aids_df %>%\n  dplyr::mutate(\n    STUDYID = \"AIDS01\",  # fixed study identifier\n    USUBJID = paste0(\"SUBJ-\", row_number()),\n    AGE = age,\n    SEX = dplyr::case_when(\n      gender == 0 ~ \"F\",\n      gender == 1 ~ \"M\",\n      TRUE ~ NA\n    ),\n    RACE = dplyr::case_when(\n      race == 0 ~ \"WHITE\",\n      race == 1 ~ \"NON-WHITE\",\n      TRUE ~ NA\n    ),\n    ARMCD = dplyr::case_when(\n      trt == 0 ~ \"ZDV\",\n      trt == 1 ~ \"ZDVDDI\",\n      trt == 2 ~ \"ZDVZAL\",\n      trt == 3 ~ \"DDI\",\n      TRUE ~ NA\n    ),\n    ARM = dplyr::case_when(\n      trt == 0 ~ \"Zidovudine (ZDV)\",\n      trt == 1 ~ \"Zidovudine (ZDV) + Didanosine (DDI)\",\n      trt == 2 ~ \"Zidovudine (ZDV) + Zalcitabine (ZAL)\",\n      trt == 3 ~ \"Didanosine (DDI)\",\n      TRUE ~ NA\n    ),\n    WEIGHTBL = wtkg  \n  ) %>%\n  dplyr::select(STUDYID, USUBJID, AGE, SEX, RACE, ARMCD, ARM, WEIGHTBL)\n\n# Save as CSV in your working directory\nwrite.csv(dm, \"data/dm.csv\", row.names = FALSE)\n\nhead(dm, 6)\n\n```\n\n### Medical History (MH) domain\n\nThis domain captures key medical conditions and patient history prior to study start, as:\n\n-   `MHDECOD`: Standardized medical condition term (e.g., Hemophilia).\n-   `MHTERM`: Specific medical history description.\n-   `MHSTRESC`: Recorded status (Yes/No/Unknown).\n\nTo check how to transform raw clinical data into a MH domain, click to show code.\n\n```{r, message=FALSE, warning=FALSE, echo=TRUE}\n# Hemophilia derivation\nmh_hemo <- aids_df %>%\n  dplyr::mutate(\n    STUDYID = \"AIDS01\",  # fixed study identifier\n    USUBJID = paste0(\"SUBJ-\", row_number()),\n    MHDECOD = \"HEMOPHILIA\",\n    MHTERM = \"History of Hemophilia\",\n    MHSTRESC = dplyr::case_when(\n      hemo == 0 ~ \"N\",\n      hemo == 1 ~ \"Y\",\n      TRUE ~ NA),\n  ) %>%\n  dplyr::select(STUDYID, USUBJID, MHDECOD, MHTERM, MHSTRESC)\n\n# Sexual orientation derivation\nmh_sex <- aids_df %>%\n  dplyr::mutate(\n    STUDYID = \"AIDS01\",  # fixed study identifier\n    USUBJID = paste0(\"SUBJ-\", row_number()),\n    MHDECOD = \"HOMOSEXUAL ACTIVITY\",\n    MHTERM = \"History of Homosexual Activity\",\n    MHSTRESC = dplyr::case_when(\n      homo == 0 ~ \"N\",\n      hemo == 1 ~ \"Y\",\n      TRUE ~ \"Unknown\"),\n  ) %>%\n  dplyr::select(STUDYID, USUBJID, MHDECOD, MHTERM, MHSTRESC)\n\n# History of IV drug use derivation\nmh_drugs <- aids_df %>%\n  dplyr::mutate(\n    STUDYID = \"AIDS01\",  # fixed study identifier\n    USUBJID = paste0(\"SUBJ-\", row_number()),\n    MHDECOD = \"INTRAVENOUS DRUG USE\",\n    MHTERM = \"History of IV Drug Use\",\n    MHSTRESC = dplyr::case_when(\n      drugs == 0 ~ \"N\",\n      drugs == 1 ~ \"Y\",\n      TRUE ~ NA),\n  ) %>%\n  dplyr::select(STUDYID, USUBJID, MHDECOD, MHTERM, MHSTRESC)\n\n# History of non-ZDV antiretroviral therapy prior clinical trial\nmh_nzdv <- aids_df %>%\n  dplyr::mutate(\n    STUDYID = \"AIDS01\",  # fixed study identifier\n    USUBJID = paste0(\"SUBJ-\", row_number()),\n    MHDECOD = \"NON-ZDV ANTIRETROVIRAL THERAPY\",\n    MHTERM = \"History of non-ZDV antiretroviral therapy\",\n    MHSTRESC = dplyr::case_when(\n      drugs == 0 ~ \"N\",\n      drugs == 1 ~ \"Y\",\n      TRUE ~ NA),\n  ) %>%\n  dplyr::select(STUDYID, USUBJID, MHDECOD, MHTERM, MHSTRESC)\n\n# History of ZDV therapy prior clinical trial\nmh_zdv30 <- aids_df %>%\n  dplyr::mutate(\n    STUDYID = \"AIDS01\",  # fixed study identifier\n    USUBJID = paste0(\"SUBJ-\", row_number()),\n    MHDECOD = \"ZDV IN 30 DAYS PRIOR\",\n    MHTERM = \"Zidovudine (ZDV) therapy in 30 days prior to baseline\",\n    MHSTRESC = dplyr::case_when(\n      drugs == 0 ~ \"N\",\n      drugs == 1 ~ \"Y\",\n      TRUE ~ NA),\n  ) %>%\n  dplyr::select(STUDYID, USUBJID, MHDECOD, MHTERM, MHSTRESC)\n\n# History of ZDV therapy prior clinical trial\nmh_zdv <- aids_df %>%\n  dplyr::mutate(\n    STUDYID = \"AIDS01\",  # fixed study identifier\n    USUBJID = paste0(\"SUBJ-\", row_number()),\n    MHDECOD = \"ZDV PRIOR\",\n    MHTERM = \"History of prior Zidovudine (ZDV) therapy\",\n    MHSTRESC = dplyr::case_when(\n      drugs == 0 ~ \"N\",\n      drugs == 1 ~ \"Y\",\n      TRUE ~ NA),\n    ) %>%\n  dplyr::select(STUDYID, USUBJID, MHDECOD, MHTERM, MHSTRESC)\n\n# bind to create a unique domain\nmh <- rbind(mh_drugs, mh_hemo, mh_nzdv,\n            mh_sex, mh_zdv30, mh_zdv)\n\n# Save as CSV in your working directory\nwrite.csv(mh, \"data/mh.csv\", row.names = FALSE)\n\nhead(mh, 6)\n\n```\n\n### Subject Characteristics (SC) domain\n\nThis domain includes baseline assessments and clinical observations, as:\n\n-   `SCTESTCD`: Short code for the assessment (e.g., KARNOFSKY, SYMPTOM).\n-   `SCORRES`: Result of the assessment (numerical or coded).\n-   `SCSTRESC`: Categorical result (e.g., Asymptomatic, Symptomatic).\n-   `SCCAT`: Category of measurement (e.g., Baseline Status, Clinical Status).\n-   `VISIT`: Study visit timepoint.\n\nTo check how to transform raw clinical data into a SC domain, click to show code.\n\n```{r, message=FALSE, warning=FALSE, echo=TRUE}\nsc_karnof <- aids_df %>%\n  dplyr::mutate(\n    STUDYID = \"AIDS01\",  # fixed study identifier\n    USUBJID = paste0(\"SUBJ-\", row_number()),\n    SCTESTCD = \"KARNOFSKY\",\n    SCORRES = karnof,\n    SCORRESU = \"Score\",\n    SCSTRESC = as.character(karnof),\n    SCCAT = \"Baseline Status\",\n    VISIT = \"Baseline\") %>%\n  dplyr::select(STUDYID, USUBJID, SCTESTCD, SCORRES, SCORRESU,\n                SCSTRESC, SCCAT, VISIT)\n\nsc_sympt <- aids_df %>%\n  dplyr::mutate(\n    STUDYID = \"AIDS01\",  # fixed study identifier\n    USUBJID = paste0(\"SUBJ-\", row_number()),\n    SCTESTCD = \"SYMPTOM\",\n    SCORRES = symptom,\n    SCORRESU = \"Score\",\n    SCSTRESC = dplyr::case_when(\n      symptom == 0 ~ \"Asymptomatic\",\n      symptom == 1 ~ \"Symptomatic\",\n      TRUE ~ NA),\n    SCCAT = \"Clinical Status\",\n    VISIT = \"Baseline\") %>%\n  dplyr::select(STUDYID, USUBJID, SCTESTCD, SCORRES, SCORRESU,\n                SCSTRESC, SCCAT, VISIT)\n\nsc_arv <- aids_df %>%\n  dplyr::mutate(\n    STUDYID = \"AIDS01\",  # fixed study identifier\n    USUBJID = paste0(\"SUBJ-\", row_number()),\n    SCTESTCD = \"ARV_HISTORY\",\n    SCORRES = str2,\n    SCORRESU = NA,\n    SCSTRESC = dplyr::case_when(\n      str2 == 0 ~ \"Naive\",\n      str2 == 1 ~ \"Experienced\",\n      TRUE ~ NA),\n    SCCAT = \"Treatment History\",\n    VISIT = \"Baseline\") %>%\n  dplyr::select(STUDYID, USUBJID, SCTESTCD, SCORRES, SCORRESU,\n                SCSTRESC, SCCAT, VISIT)\n\nsc_treat <- aids_df %>%\n  dplyr::mutate(\n    STUDYID = \"AIDS01\",  # fixed study identifier\n    USUBJID = paste0(\"SUBJ-\", row_number()),\n    SCTESTCD = \"TREATMENT_IND\",\n    SCORRES = treat,\n    SCORRESU = NA,\n    SCSTRESC = dplyr::case_when(\n      str2 == 0 ~ \"ZDV only\",\n      str2 == 1 ~ \"Other\",\n      TRUE ~ NA),\n    SCCAT = \"Treatment Assignment\",\n    VISIT = \"Baseline\") %>%\n  dplyr::select(STUDYID, USUBJID, SCTESTCD, SCORRES, SCORRESU,\n                SCSTRESC, SCCAT, VISIT)\n\nsc_offtreat <- aids_df %>%\n  dplyr::mutate(\n    STUDYID = \"AIDS01\",  # fixed study identifier\n    USUBJID = paste0(\"SUBJ-\", row_number()),\n    SCTESTCD = \"OFF_TREATMENT\",\n    SCORRES = offtrt,\n    SCORRESU = NA,\n    SCSTRESC = dplyr::case_when(\n      str2 == 0 ~ \"N\",\n      str2 == 1 ~ \"Y\",\n      TRUE ~ NA),\n    SCCAT = \"Treatment Status\",\n    VISIT = \"96+/-5 Weeks\") %>%\n  dplyr::select(STUDYID, USUBJID, SCTESTCD, SCORRES, SCORRESU,\n                SCSTRESC, SCCAT, VISIT)\n\n\n# bind to create a unique domain\nsc <- rbind(sc_arv, sc_karnof, sc_offtreat,\n            sc_sympt, sc_treat)\n\n# Save as CSV in your working directory\nwrite.csv(sc, \"data/sc.csv\", row.names = FALSE)\n\nhead(sc, 6)\n\n```\n\n### Exposure (EX) domain\n\nThis domain details study drug administration for each participant, as:\n\n-   `EXTRT`: Treatment name.\n-   `EXTRTCD`: Treatment code.\n-   `EXROUTE`: Administration route (e.g., Oral).\n-   `EXOCCUR`: Indicates whether the dose actually occurred (Y/N).\n-   `EXSTDTC` / `EXENDTC`: Start and end date of exposure.\n\nTo check how to transform raw clinical data into a EX domain, click to show code.\n\n```{r, message=FALSE, warning=FALSE, echo=TRUE}\nset.seed(123)\n\nex_trt <- aids_df %>%\n  mutate(\n    STUDYID = \"AIDS01\",\n    USUBJID = paste0(\"SUBJ-\", row_number()),\n    EXTRT = case_when(\n      trt == 0 ~ \"ZDV Only\",\n      trt == 1 ~ \"ZDV + DDI\",\n      trt == 2 ~ \"ZDV + Zal\",\n      trt == 3 ~ \"DDI Only\",\n      TRUE ~ NA_character_\n    ),\n    EXTRTCD = case_when(\n      trt == 0 ~ \"ZDV\",\n      trt == 1 ~ \"ZDVDDI\",\n      trt == 2 ~ \"ZDVZAL\",\n      trt == 3 ~ \"DDI\",\n      TRUE ~ NA_character_\n    ),\n    EXROUTE = \"Oral\",\n    EXSTDTC = as.Date(\"2025-01-01\"),\n    EXOCCUR = case_when(\n      offtrt == 0 ~ \"N\",\n      offtrt == 1 ~ \"Y\"\n    ),\n    EXENDTC = if_else(\n      offtrt == 0,\n      as.Date(\"2025-12-01\"),\n      as.Date(\"2025-01-01\") + sample(28:84, 1)  \n    )\n  ) %>%\n  select(STUDYID, USUBJID, EXTRT, EXTRTCD, EXROUTE, EXSTDTC, EXOCCUR, EXENDTC)\n\n# Save as CSV in your working directory\nwrite.csv(ex_trt, \"data/ex.csv\", row.names = FALSE)\n\nhead(ex_trt, 6)\n```\n\n### Laboratory Tests (LB) domain\n\nThis domain captures laboratory measurements at different visits, as:\n\n-   `LBTESTCD`: Lab test code (e.g., CD4, CD8).\n-   `LBTEST`: Full lab test name.\n-   `LBORRESU`: Unit of measurement (e.g., cells/mm³).\n-   `VISIT`: Visit when the test was performed.\n-   `LBORRES` / `LBSTRESC`: Recorded result (numerical or categorical).\n\nTo check how to transform raw clinical data into a LB domain, click to show code.\n\n```{r, message=FALSE, warning=FALSE, echo=TRUE}\n\nlb_cd4 <- aids_df %>%\n  dplyr::mutate(\n    STUDYID = \"AIDS01\",  # fixed study identifier\n    USUBJID = paste0(\"SUBJ-\", row_number()),\n    LBTESTCD = \"CD4\",\n    LBTEST = \"CD4+ T-cell Count\",\n    LBORRES = cd40,\n    LBORRESU = \"cells/mm3\",\n    LBSTRESC = as.character(cd40),\n    VISIT = \"Baseline\") %>%\n  dplyr::select(STUDYID, USUBJID, LBTESTCD, LBTEST, LBORRES,\n                LBORRESU, LBSTRESC, VISIT)\n\nlb_cd4_weeks <- aids_df %>%\n  dplyr::mutate(\n    STUDYID = \"AIDS01\",  # fixed study identifier\n    USUBJID = paste0(\"SUBJ-\", row_number()),\n    LBTESTCD = \"CD4\",\n    LBTEST = \"CD4+ T-cell Count\",\n    LBORRES = cd420,\n    LBORRESU = \"cells/mm3\",\n    LBSTRESC = as.character(cd420),\n    VISIT = \"20±5 weeks\") %>%\n  dplyr::select(STUDYID, USUBJID, LBTESTCD, LBTEST, LBORRES,\n                LBORRESU, LBSTRESC, VISIT)\n\nlb_cd8 <- aids_df %>%\n  dplyr::mutate(\n    STUDYID = \"AIDS01\",  # fixed study identifier\n    USUBJID = paste0(\"SUBJ-\", row_number()),\n    LBTESTCD = \"CD8\",\n    LBTEST = \"CD8+ T-cell Count\",\n    LBORRES = cd80,\n    LBORRESU = \"cells/mm3\",\n    LBSTRESC = as.character(cd80),\n    VISIT = \"Baseline\") %>%\n  dplyr::select(STUDYID, USUBJID, LBTESTCD, LBTEST, LBORRES,\n                LBORRESU, LBSTRESC, VISIT)\n\n\nlb_cd8_weeks <- aids_df %>%\n  dplyr::mutate(\n    STUDYID = \"AIDS01\",  # fixed study identifier\n    USUBJID = paste0(\"SUBJ-\", row_number()),\n    LBTESTCD = \"CD8\",\n    LBTEST = \"CD8+ T-cell Count\",\n    LBORRES = cd820,\n    LBORRESU = \"cells/mm3\",\n    LBSTRESC = as.character(cd820),\n    VISIT = \"20±5 weeks\") %>%\n  dplyr::select(STUDYID, USUBJID, LBTESTCD, LBTEST, LBORRES,\n                LBORRESU, LBSTRESC, VISIT)\n\n# bind to create a unique domain\nlb <- rbind(lb_cd4, lb_cd4_weeks,\n            lb_cd8, lb_cd8_weeks)\n\n# Save as CSV in your working directory\nwrite.csv(lb, \"data/lb.csv\", row.names = FALSE)\n\nhead(lb, 6)\n```\n\n</div>\n\n\n## ADaM Overview {#adam-overview}\n\nThe ADaM (Analysis Data Model) standard was developed by CDISC to structure clinical trial datasets for statistical analysis. ADaM datasets are derived from SDTM and organized to facilitate statistical programming, as well as the creation of tables, listings, and graphs (TLGs) - more details below. They follow strict rules for traceability, ensuring that every variable can be linked back to its source in SDTM.\n\n<div class=\"content-box\">\n\n### Subject-Level Analysis Dataset (ADSL)\n\n**ADSL** contains one record per subject and provides key demographic and treatment information that serves as the foundation for most analyses. Its main characteristics include:\n\n-   Structure: one record per subject.\n-   Key variables: `STUDYID`, `USUBJID`, `AGE`, `SEX`, `RACE`, `ARM`, and `ACTARM`.\n-   Includes treatment start and end dates, discontinuation status, and other derived variables useful for subgroup analyses.\n\nTo check how manually construct **ADSL** data using SDTM domains, click to show code.\n\n```{r, message=FALSE, warning=FALSE, echo=TRUE}\n# Load packages\nlibrary(tidyverse)\n\n\n# Load SDTM domains\ndm <- read.csv(\"data/dm.csv\")\nmh <- read.csv(\"data/mh.csv\")\nsc <- read.csv(\"data/sc.csv\")\nex <- read.csv(\"data/ex.csv\")\nlb <- read.csv(\"data/lb.csv\")\n\n# -------------------------------------------------------------------------------------------\n# Start from DM (1 line per subject guaranteed)\nadsl <- dm %>%\n  # Merge with SC for baseline Karnofsky and symptoms\n  left_join(\n    sc %>% \n      filter(SCTESTCD == \"KARNOFSKY\", VISIT == \"Baseline\") %>%\n      select(USUBJID, SCORRES) %>%\n      rename(KARNOF = SCORRES),\n    by = \"USUBJID\"\n  ) %>%\n  left_join(\n    sc %>% \n      filter(SCTESTCD == \"SYMPTOM\", VISIT == \"Baseline\") %>%\n      select(USUBJID, SCSTRESC) %>%\n      rename(SYMPTOM = SCSTRESC),\n    by = \"USUBJID\"\n  ) %>%\n  # Merge with MH for key medical history\n  left_join(\n    mh %>%\n      filter(MHDECOD == \"HEMOPHILIA\") %>%\n      select(USUBJID, MHSTRESC) %>%\n      rename(HEMO = MHSTRESC),\n    by = \"USUBJID\"\n  ) %>%\n  left_join(\n    mh %>%\n      filter(MHDECOD == \"INTRAVENOUS DRUG USE\") %>%\n      select(USUBJID, MHSTRESC) %>%\n      rename(IVDRUG = MHSTRESC),\n    by = \"USUBJID\"\n  ) %>%\n  mutate(\n    STUDYID = \"AIDS01\",\n    TRTSDT = as.Date(\"2025-01-01\"),  # treatment start date\n    TRTEDT = as.Date(\"2025-12-01\")   # treatment end date \n  )\n\n# Save ADSL\nwrite.csv(adsl, \"data/adsl.csv\", row.names = FALSE)\n\n# Preview\nhead(adsl)\n```\n\n### Laboratory Results Analysis Dataset (ADLB)\n\n**ADLB** is the dataset for laboratory test results. It contains repeated measures per subject across study visits, enabling assessment of trends, changes, and treatment-related effects. Its main characteristics include: - Structure: one record per subject per laboratory parameter per visit. - Key variables: `STUDYID`, `USUBJID`, `PARAM`, `AVISIT`, `AVAL`(numeric result), `BASE`, and `CHG` (change from baseline). - Supports analyses such as mean comparisons between treatment arms, evaluation of clinically relevant changes, and categorization of results outside reference ranges.\n\nTo check how manually construct **ADLB** data using SDTM domains, click to show code.\n\n```{r, message=FALSE, warning=FALSE, echo=TRUE}\n# ADLB\nadlb <- lb %>%\n  left_join(dm %>% select(USUBJID, ARM, ARMCD), by = \"USUBJID\") %>%\n  group_by(USUBJID, LBTESTCD) %>%\n  arrange(VISIT) %>%\n  mutate(\n    PARAMCD = LBTESTCD,\n    PARAM = LBTEST,\n    AVAL = LBORRES,\n    AVALU = LBORRESU\n  ) %>%\n  ungroup() %>%\n  select(STUDYID, USUBJID, ARM, ARMCD, VISIT, PARAMCD, PARAM, AVAL, AVALU)\n\n# Save ADSL\nwrite.csv(adlb, \"data/adlb.csv\", row.names = FALSE)\n\n# Preview\nhead(adlb)\n```\n\n</div>\n\n## TGLs Overview {#tgls-overview}\n\nTables, Listings, and Graphs (TLGs) are the final outputs generated from ADaM datasets to support clinical trial reporting. They are designed to provide clear, standardized summaries of study results that can be reviewed by clinicians, statisticians, and regulatory agencies.\n\nThe main objectives of TLGs are:\n\n-   **Tables**: summarize patient characteristics, efficacy, and safety data with descriptive and inferential statistics.\n-   **Listings**: display subject-level data in detail, allowing reviewers to trace back results to individual participants.\n-   **Graphs**: visually represent trends, distributions, and treatment effects to complement tabular summaries.\n\n<div class=\"content-box\">\n\n### TGLs Implemented in this project\n\nIn this pipeline, I created a set of TLGs using **ADSL** (demographics) and **ADLB** (laboratory data):\n\n#### **Demographics and Baseline Characteristics (ADSL)**:\n\n-   Table summarizing sex, age, and race distribution by treatment arm.\n-   Graphs showing proportions of sex and race across arms.\n-   Histogram of age distribution by treatment.\n\nTo check how to create **ADSL** TGLs, click to show code.\n\n```{r, message=FALSE, warning=FALSE, echo=TRUE}\n# Finally, I will create tables, graphs and lists (TGLs) using the clinical data \n# Load packages\nlibrary(tidyverse)\nlibrary(rtables)\nlibrary(ggplot2)\n\n\n# Load datasets\nadsl <- read.csv(\"data/adsl.csv\")\nadlb <- read.csv(\"data/adlb.csv\")\n\n# ----------------------------------------------------------------------------------------------------\n# Table N per ARMCD/SEX/RACE\n# Change sex labels for graph\nadsl_lbl <- adsl %>%\n  dplyr::mutate(\n    SEX = dplyr::recode(SEX,\n                        \"M\" = \"Male\",\n                        \"F\" = \"Female\"))\n\nadsl_lbl <- adsl_lbl %>%\n  dplyr::mutate(\n    RACE = dplyr::recode(RACE,\n                        \"WHITE\" = \"White\",\n                        \"NON-WHITE\" = \"Non-white\"))\n\n# Create basic rtable\ntbl <- basic_table(show_colcounts = TRUE) %>%\n  split_cols_by(\"ARM\") %>%\n  add_overall_col(\"TOTAL\") %>%\n  split_rows_by(\"SEX\",\n                split_label = \"Subject Sex\",\n                label_pos = \"topleft\") %>%\n  summarize_row_groups() %>%\n  analyze(\"AGE\",\n          var_labels = \"Age (years)\",\n          afun = function(x, .N_col) {\n            m <- mean(x, na.rm = TRUE)\n            med <- median(x, na.rm = TRUE)\n            q1 <- quantile(x, 0.25, na.rm = TRUE)\n            q3 <- quantile(x, 0.75, na.rm = TRUE)\n            mi <- min(x, na.rm = TRUE)\n            ma <- max(x, na.rm = TRUE)\n            \n            in_rows(\n              \"Mean\"     = sprintf(\"%.1f\", m),\n              \"Median\"   = sprintf(\"%.1f\", med),\n              \"Q1\"       = sprintf(\"%.1f\", q1),\n              \"Q3\"       = sprintf(\"%.1f\", q3),\n              \"Min\"      = sprintf(\"%.1f\", mi),\n              \"Max\"      = sprintf(\"%.1f\", ma)\n            )\n          }) %>%\n  analyze(\"RACE\", var_labels = \"Race\",\n          afun = function(x, .N_col) {\n            tab <- table(x)\n            res <- sprintf(\"%d (%.1f%%)\", tab, 100 * tab / .N_col)\n            in_rows(.list = as.list(res), .labels = names(tab))\n          })\n\ntbl_final <- build_table(tbl, adsl_lbl)\n\n# Titles & Footers\nmain_title(tbl_final) <- \"Demographics and Baseline Characteristics of Patients with Acquired Immunodeficiency Syndrome (AIDS) by Treatment Arm.\"\nsubtitles(tbl_final) <- \"Summary of sex, age, and race distribution in the Safety Population.\"\nmain_footer(tbl_final) <- c(\"Mean = arithmetic average; Median = 50th percentile; Q1/Q3 = 25th and 75th percentiles; Min/Max = extreme values.\")\nprov_footer(tbl_final) <- \"Safety Population includes all randomized patients with AIDS who received at least one dose of study treatment.\"\n\ntbl_final\n\n# Graphs\n# Sex percentage per group\nggplot(adsl_lbl, aes(x = ARMCD, fill = SEX)) +\n  geom_bar(position = \"fill\", color = \"white\", width = 0.5, alpha = 0.7) +\n  scale_y_continuous(labels = scales::percent) +\n  scale_fill_manual(values = c(\"Male\" = \"#B3B3B3\", \"Female\" = \"#A6D854\")) +\n  labs(title = \"Sex Distribution by Treatment Arm\",\n       x = \"Treatment Arm\", y = \"Percentage\",\n       fill = \"Sex\") +\n  theme_minimal(base_size = 12) +\n  theme(\n    panel.grid.major.x = element_blank(),\n    panel.grid.minor = element_blank(),\n    panel.grid.major.y = element_line(color = \"grey90\"),\n    legend.position = \"top\",\n    legend.title = element_blank(),\n    plot.title = element_text(hjust = 0.5, face = \"bold\")\n  )\n\n# Race summary\nggplot(adsl_lbl, aes(x = ARMCD, fill = RACE)) +\n  geom_bar(position = \"fill\", color = \"white\", width = 0.5,  alpha = 0.7) +\n  scale_y_continuous(labels = scales::percent) +\n  scale_fill_manual(values = c(\"White\" = \"#66C2A5\", \"Non-white\" = \"#FC8D62\")) +\n  labs(title = \"Race Distribution by Treatment Arm\",\n       x = \"Treatment Arm\", y = \"Percentage\",\n       fill = \"Race\") +\n  theme_minimal(base_size = 12) +\n  theme(\n    panel.grid.major.x = element_blank(),\n    panel.grid.minor = element_blank(),\n    panel.grid.major.y = element_line(color = \"grey90\"),\n    legend.position = \"top\",\n    legend.title = element_blank(),\n    plot.title = element_text(hjust = 0.5, face = \"bold\")\n  )\n\n\n# Age summary\nggplot(adsl, aes(x = AGE, fill = ARM)) +\n  geom_histogram(binwidth = 5, position = \"dodge\", alpha = 0.7) +\n  scale_fill_brewer(palette = \"Set2\") +  # paleta discreta\n  labs(\n    title = \"Age Distribution by Treatment Arm\",\n    x = \"Age (years)\",\n    y = \"Number of Patients\",\n    fill = \"Treatment Arm\"\n  ) +\n  theme_minimal(base_size = 12) +\n  theme(\n    plot.title = element_text(hjust = 0.5, face = \"bold\"),\n    legend.position = \"top\",\n    legend.title = element_text(face = \"bold\"),\n    panel.grid.minor = element_blank()\n  )\n\n```\n\n#### **Laboratory Test Results (ADLB)**:\n\n-   Tables summarizing baseline and follow-up laboratory results (mean, median, quartiles, min/max).\n-   Graph showing proportions T cell count (CD4+ and CD8+) across arms.\n\nTo check how to create **ADLB** TGLs, click to show code.\n\n```{r, message=FALSE, warning=FALSE, echo=TRUE}\n# ----------------------------------------------------------------------------------------------------\n# Merge lab data from adsl to adlb\nadlb_merged <- adlb %>%\n  left_join(\n    adsl %>% select(USUBJID, SYMPTOM, HEMO, KARNOF, IVDRUG),\n    by = \"USUBJID\"\n  )\n\nadlb_merged$VISIT <- factor(adlb_merged$VISIT, levels = c(\"Baseline\", \"20±5 weeks\")) # Order patient visit as baseline first\n\n\n# Create basic rtable\ntbl_lab <- basic_table(show_colcounts = TRUE) %>%\n  split_cols_by(\"VISIT\") %>%\n  split_rows_by(\"ARM\",\n                split_label = \"Treatment arm\",\n                label_pos = \"topleft\") %>%\n  split_rows_by(\"PARAM\",\n                split_label = \"Laboratory test\",\n                label_pos = \"topleft\") %>%\n  analyze(\"AVAL\", var_labels = \"Value (AVAL)\", \n          afun = function(x, .N_col) {\n            in_rows(\n              \"Mean\"   = sprintf(\"%.1f\", mean(x, na.rm = TRUE)),\n              \"Median\" = sprintf(\"%.1f\", median(x, na.rm = TRUE)),\n              \"Q1\"     = sprintf(\"%.1f\", quantile(x, 0.25, na.rm = TRUE)),\n              \"Q3\"     = sprintf(\"%.1f\", quantile(x, 0.75, na.rm = TRUE)),\n              \"Min\"    = sprintf(\"%.1f\", min(x, na.rm = TRUE)),\n              \"Max\"    = sprintf(\"%.1f\", max(x, na.rm = TRUE))\n            )\n          })\n\ntbl_lab <- build_table(tbl_lab, adlb_merged)\n\n# Titles & Footers\nmain_title(tbl_lab) <- \"Laboratory Test Results of Patients with Acquired Immunodeficiency Syndrome (AIDS) by Treatment Arm\"\nsubtitles(tbl_lab) <- \"Summary statistics (Mean, Median, Q1, Q3, Min, Max) for immunological laboratory parameters at each visit\"\nmain_footer(tbl_lab) <- c(\n  \"Mean = arithmetic average; Median = 50th percentile; Q1/Q3 = 25th and 75th percentiles; Min/Max = extreme values.\")\nprov_footer(tbl_lab) <- \"Safety Population includes all randomized patients with AIDS who had laboratory assessments at baseline and follow-up visits.\"\n\ntbl_lab\n\n# Create graph to show T cell counts by treatment\n# Average laboratory values by treatment arm\nadlb_summary <- adlb_merged %>%\n  group_by(ARM, PARAM) %>%\n  summarise(mean_val = mean(AVAL, na.rm = TRUE), .groups = \"drop\")\n\n\nggplot(adlb_merged, aes(x = PARAM, y = AVAL, fill = ARM)) +\n  geom_col(data = adlb_summary, aes(x = PARAM, y = mean_val, fill = ARM),\n           position = position_dodge(width = 0.8), alpha = 0.6) +  # barras de média\n  geom_jitter(aes(color = ARM), \n              position = position_jitterdodge(jitter.width = 0.15, dodge.width = 0.8),\n              size = 1, alpha = 0.5, show.legend = FALSE) +  # pontos individuais\n  scale_fill_brewer(palette = \"Set2\") +\n  scale_color_brewer(palette = \"Set2\") +\n  labs(\n    title = \"Mean Laboratory Values and Individual Patient Measurements by Treatment Arm\",\n    x = \"Laboratory Parameter\",\n    y = \"Value\",\n    fill = \"Treatment Arm\"\n  ) +\n  theme_minimal(base_size = 12) +\n  theme(\n    plot.title = element_text(hjust = 0.5, face = \"bold\"),\n    axis.text.x = element_text(angle = 30, hjust = 1, face = \"bold\"),\n    legend.position = \"top\",\n    legend.title = element_text(face = \"bold\")\n  )\n\n```\n\n</div>","srcMarkdownNoYaml":"\n\n\n## SDTM Domains Overview {#sdtm-overview}\n\nThe SDTM (Study Data Tabulation Model) organizes clinical trial data into standardized domains, facilitating analysis and reporting. Each domain captures specific information about study participants, such as demographics, medical history, clinical assessments, and laboratory results.\n\n<div class=\"content-box\">\n\n### Demographics (DM) domain\n\nThis domain contains basic participant information, as:\n\n-   `USUBJID`: Unique subject identifier.\n-   `AGE`: Participant's age.\n-   `SEX`: Sex (Male/Female).\n-   `RACE`: Race (White/Non-white).\n-   `ARM` / `ARMCD`: Treatment arm assigned.\n\nTo check how to transform raw clinical data into a DM domain, click to show code.\n\n```{r, message=FALSE, warning=FALSE, echo=TRUE}\n\n# load packages\nlibrary(tidyverse)\nlibrary(lubridate) \n\n# Load aids dataset (obtained at Kaggle: https://www.kaggle.com/datasets/tanshihjen/aids-clinical-trials)\naids_df <- read_csv(\"data/AIDS_ClinicalTrial_GroupStudy175.csv\")\n\n# The aids_df is a hypothetical clinical trial data set. So first, I'll adapt it to be similar to a SDTM, by doing derivations\n\ndm <- aids_df %>%\n  dplyr::mutate(\n    STUDYID = \"AIDS01\",  # fixed study identifier\n    USUBJID = paste0(\"SUBJ-\", row_number()),\n    AGE = age,\n    SEX = dplyr::case_when(\n      gender == 0 ~ \"F\",\n      gender == 1 ~ \"M\",\n      TRUE ~ NA\n    ),\n    RACE = dplyr::case_when(\n      race == 0 ~ \"WHITE\",\n      race == 1 ~ \"NON-WHITE\",\n      TRUE ~ NA\n    ),\n    ARMCD = dplyr::case_when(\n      trt == 0 ~ \"ZDV\",\n      trt == 1 ~ \"ZDVDDI\",\n      trt == 2 ~ \"ZDVZAL\",\n      trt == 3 ~ \"DDI\",\n      TRUE ~ NA\n    ),\n    ARM = dplyr::case_when(\n      trt == 0 ~ \"Zidovudine (ZDV)\",\n      trt == 1 ~ \"Zidovudine (ZDV) + Didanosine (DDI)\",\n      trt == 2 ~ \"Zidovudine (ZDV) + Zalcitabine (ZAL)\",\n      trt == 3 ~ \"Didanosine (DDI)\",\n      TRUE ~ NA\n    ),\n    WEIGHTBL = wtkg  \n  ) %>%\n  dplyr::select(STUDYID, USUBJID, AGE, SEX, RACE, ARMCD, ARM, WEIGHTBL)\n\n# Save as CSV in your working directory\nwrite.csv(dm, \"data/dm.csv\", row.names = FALSE)\n\nhead(dm, 6)\n\n```\n\n### Medical History (MH) domain\n\nThis domain captures key medical conditions and patient history prior to study start, as:\n\n-   `MHDECOD`: Standardized medical condition term (e.g., Hemophilia).\n-   `MHTERM`: Specific medical history description.\n-   `MHSTRESC`: Recorded status (Yes/No/Unknown).\n\nTo check how to transform raw clinical data into a MH domain, click to show code.\n\n```{r, message=FALSE, warning=FALSE, echo=TRUE}\n# Hemophilia derivation\nmh_hemo <- aids_df %>%\n  dplyr::mutate(\n    STUDYID = \"AIDS01\",  # fixed study identifier\n    USUBJID = paste0(\"SUBJ-\", row_number()),\n    MHDECOD = \"HEMOPHILIA\",\n    MHTERM = \"History of Hemophilia\",\n    MHSTRESC = dplyr::case_when(\n      hemo == 0 ~ \"N\",\n      hemo == 1 ~ \"Y\",\n      TRUE ~ NA),\n  ) %>%\n  dplyr::select(STUDYID, USUBJID, MHDECOD, MHTERM, MHSTRESC)\n\n# Sexual orientation derivation\nmh_sex <- aids_df %>%\n  dplyr::mutate(\n    STUDYID = \"AIDS01\",  # fixed study identifier\n    USUBJID = paste0(\"SUBJ-\", row_number()),\n    MHDECOD = \"HOMOSEXUAL ACTIVITY\",\n    MHTERM = \"History of Homosexual Activity\",\n    MHSTRESC = dplyr::case_when(\n      homo == 0 ~ \"N\",\n      hemo == 1 ~ \"Y\",\n      TRUE ~ \"Unknown\"),\n  ) %>%\n  dplyr::select(STUDYID, USUBJID, MHDECOD, MHTERM, MHSTRESC)\n\n# History of IV drug use derivation\nmh_drugs <- aids_df %>%\n  dplyr::mutate(\n    STUDYID = \"AIDS01\",  # fixed study identifier\n    USUBJID = paste0(\"SUBJ-\", row_number()),\n    MHDECOD = \"INTRAVENOUS DRUG USE\",\n    MHTERM = \"History of IV Drug Use\",\n    MHSTRESC = dplyr::case_when(\n      drugs == 0 ~ \"N\",\n      drugs == 1 ~ \"Y\",\n      TRUE ~ NA),\n  ) %>%\n  dplyr::select(STUDYID, USUBJID, MHDECOD, MHTERM, MHSTRESC)\n\n# History of non-ZDV antiretroviral therapy prior clinical trial\nmh_nzdv <- aids_df %>%\n  dplyr::mutate(\n    STUDYID = \"AIDS01\",  # fixed study identifier\n    USUBJID = paste0(\"SUBJ-\", row_number()),\n    MHDECOD = \"NON-ZDV ANTIRETROVIRAL THERAPY\",\n    MHTERM = \"History of non-ZDV antiretroviral therapy\",\n    MHSTRESC = dplyr::case_when(\n      drugs == 0 ~ \"N\",\n      drugs == 1 ~ \"Y\",\n      TRUE ~ NA),\n  ) %>%\n  dplyr::select(STUDYID, USUBJID, MHDECOD, MHTERM, MHSTRESC)\n\n# History of ZDV therapy prior clinical trial\nmh_zdv30 <- aids_df %>%\n  dplyr::mutate(\n    STUDYID = \"AIDS01\",  # fixed study identifier\n    USUBJID = paste0(\"SUBJ-\", row_number()),\n    MHDECOD = \"ZDV IN 30 DAYS PRIOR\",\n    MHTERM = \"Zidovudine (ZDV) therapy in 30 days prior to baseline\",\n    MHSTRESC = dplyr::case_when(\n      drugs == 0 ~ \"N\",\n      drugs == 1 ~ \"Y\",\n      TRUE ~ NA),\n  ) %>%\n  dplyr::select(STUDYID, USUBJID, MHDECOD, MHTERM, MHSTRESC)\n\n# History of ZDV therapy prior clinical trial\nmh_zdv <- aids_df %>%\n  dplyr::mutate(\n    STUDYID = \"AIDS01\",  # fixed study identifier\n    USUBJID = paste0(\"SUBJ-\", row_number()),\n    MHDECOD = \"ZDV PRIOR\",\n    MHTERM = \"History of prior Zidovudine (ZDV) therapy\",\n    MHSTRESC = dplyr::case_when(\n      drugs == 0 ~ \"N\",\n      drugs == 1 ~ \"Y\",\n      TRUE ~ NA),\n    ) %>%\n  dplyr::select(STUDYID, USUBJID, MHDECOD, MHTERM, MHSTRESC)\n\n# bind to create a unique domain\nmh <- rbind(mh_drugs, mh_hemo, mh_nzdv,\n            mh_sex, mh_zdv30, mh_zdv)\n\n# Save as CSV in your working directory\nwrite.csv(mh, \"data/mh.csv\", row.names = FALSE)\n\nhead(mh, 6)\n\n```\n\n### Subject Characteristics (SC) domain\n\nThis domain includes baseline assessments and clinical observations, as:\n\n-   `SCTESTCD`: Short code for the assessment (e.g., KARNOFSKY, SYMPTOM).\n-   `SCORRES`: Result of the assessment (numerical or coded).\n-   `SCSTRESC`: Categorical result (e.g., Asymptomatic, Symptomatic).\n-   `SCCAT`: Category of measurement (e.g., Baseline Status, Clinical Status).\n-   `VISIT`: Study visit timepoint.\n\nTo check how to transform raw clinical data into a SC domain, click to show code.\n\n```{r, message=FALSE, warning=FALSE, echo=TRUE}\nsc_karnof <- aids_df %>%\n  dplyr::mutate(\n    STUDYID = \"AIDS01\",  # fixed study identifier\n    USUBJID = paste0(\"SUBJ-\", row_number()),\n    SCTESTCD = \"KARNOFSKY\",\n    SCORRES = karnof,\n    SCORRESU = \"Score\",\n    SCSTRESC = as.character(karnof),\n    SCCAT = \"Baseline Status\",\n    VISIT = \"Baseline\") %>%\n  dplyr::select(STUDYID, USUBJID, SCTESTCD, SCORRES, SCORRESU,\n                SCSTRESC, SCCAT, VISIT)\n\nsc_sympt <- aids_df %>%\n  dplyr::mutate(\n    STUDYID = \"AIDS01\",  # fixed study identifier\n    USUBJID = paste0(\"SUBJ-\", row_number()),\n    SCTESTCD = \"SYMPTOM\",\n    SCORRES = symptom,\n    SCORRESU = \"Score\",\n    SCSTRESC = dplyr::case_when(\n      symptom == 0 ~ \"Asymptomatic\",\n      symptom == 1 ~ \"Symptomatic\",\n      TRUE ~ NA),\n    SCCAT = \"Clinical Status\",\n    VISIT = \"Baseline\") %>%\n  dplyr::select(STUDYID, USUBJID, SCTESTCD, SCORRES, SCORRESU,\n                SCSTRESC, SCCAT, VISIT)\n\nsc_arv <- aids_df %>%\n  dplyr::mutate(\n    STUDYID = \"AIDS01\",  # fixed study identifier\n    USUBJID = paste0(\"SUBJ-\", row_number()),\n    SCTESTCD = \"ARV_HISTORY\",\n    SCORRES = str2,\n    SCORRESU = NA,\n    SCSTRESC = dplyr::case_when(\n      str2 == 0 ~ \"Naive\",\n      str2 == 1 ~ \"Experienced\",\n      TRUE ~ NA),\n    SCCAT = \"Treatment History\",\n    VISIT = \"Baseline\") %>%\n  dplyr::select(STUDYID, USUBJID, SCTESTCD, SCORRES, SCORRESU,\n                SCSTRESC, SCCAT, VISIT)\n\nsc_treat <- aids_df %>%\n  dplyr::mutate(\n    STUDYID = \"AIDS01\",  # fixed study identifier\n    USUBJID = paste0(\"SUBJ-\", row_number()),\n    SCTESTCD = \"TREATMENT_IND\",\n    SCORRES = treat,\n    SCORRESU = NA,\n    SCSTRESC = dplyr::case_when(\n      str2 == 0 ~ \"ZDV only\",\n      str2 == 1 ~ \"Other\",\n      TRUE ~ NA),\n    SCCAT = \"Treatment Assignment\",\n    VISIT = \"Baseline\") %>%\n  dplyr::select(STUDYID, USUBJID, SCTESTCD, SCORRES, SCORRESU,\n                SCSTRESC, SCCAT, VISIT)\n\nsc_offtreat <- aids_df %>%\n  dplyr::mutate(\n    STUDYID = \"AIDS01\",  # fixed study identifier\n    USUBJID = paste0(\"SUBJ-\", row_number()),\n    SCTESTCD = \"OFF_TREATMENT\",\n    SCORRES = offtrt,\n    SCORRESU = NA,\n    SCSTRESC = dplyr::case_when(\n      str2 == 0 ~ \"N\",\n      str2 == 1 ~ \"Y\",\n      TRUE ~ NA),\n    SCCAT = \"Treatment Status\",\n    VISIT = \"96+/-5 Weeks\") %>%\n  dplyr::select(STUDYID, USUBJID, SCTESTCD, SCORRES, SCORRESU,\n                SCSTRESC, SCCAT, VISIT)\n\n\n# bind to create a unique domain\nsc <- rbind(sc_arv, sc_karnof, sc_offtreat,\n            sc_sympt, sc_treat)\n\n# Save as CSV in your working directory\nwrite.csv(sc, \"data/sc.csv\", row.names = FALSE)\n\nhead(sc, 6)\n\n```\n\n### Exposure (EX) domain\n\nThis domain details study drug administration for each participant, as:\n\n-   `EXTRT`: Treatment name.\n-   `EXTRTCD`: Treatment code.\n-   `EXROUTE`: Administration route (e.g., Oral).\n-   `EXOCCUR`: Indicates whether the dose actually occurred (Y/N).\n-   `EXSTDTC` / `EXENDTC`: Start and end date of exposure.\n\nTo check how to transform raw clinical data into a EX domain, click to show code.\n\n```{r, message=FALSE, warning=FALSE, echo=TRUE}\nset.seed(123)\n\nex_trt <- aids_df %>%\n  mutate(\n    STUDYID = \"AIDS01\",\n    USUBJID = paste0(\"SUBJ-\", row_number()),\n    EXTRT = case_when(\n      trt == 0 ~ \"ZDV Only\",\n      trt == 1 ~ \"ZDV + DDI\",\n      trt == 2 ~ \"ZDV + Zal\",\n      trt == 3 ~ \"DDI Only\",\n      TRUE ~ NA_character_\n    ),\n    EXTRTCD = case_when(\n      trt == 0 ~ \"ZDV\",\n      trt == 1 ~ \"ZDVDDI\",\n      trt == 2 ~ \"ZDVZAL\",\n      trt == 3 ~ \"DDI\",\n      TRUE ~ NA_character_\n    ),\n    EXROUTE = \"Oral\",\n    EXSTDTC = as.Date(\"2025-01-01\"),\n    EXOCCUR = case_when(\n      offtrt == 0 ~ \"N\",\n      offtrt == 1 ~ \"Y\"\n    ),\n    EXENDTC = if_else(\n      offtrt == 0,\n      as.Date(\"2025-12-01\"),\n      as.Date(\"2025-01-01\") + sample(28:84, 1)  \n    )\n  ) %>%\n  select(STUDYID, USUBJID, EXTRT, EXTRTCD, EXROUTE, EXSTDTC, EXOCCUR, EXENDTC)\n\n# Save as CSV in your working directory\nwrite.csv(ex_trt, \"data/ex.csv\", row.names = FALSE)\n\nhead(ex_trt, 6)\n```\n\n### Laboratory Tests (LB) domain\n\nThis domain captures laboratory measurements at different visits, as:\n\n-   `LBTESTCD`: Lab test code (e.g., CD4, CD8).\n-   `LBTEST`: Full lab test name.\n-   `LBORRESU`: Unit of measurement (e.g., cells/mm³).\n-   `VISIT`: Visit when the test was performed.\n-   `LBORRES` / `LBSTRESC`: Recorded result (numerical or categorical).\n\nTo check how to transform raw clinical data into a LB domain, click to show code.\n\n```{r, message=FALSE, warning=FALSE, echo=TRUE}\n\nlb_cd4 <- aids_df %>%\n  dplyr::mutate(\n    STUDYID = \"AIDS01\",  # fixed study identifier\n    USUBJID = paste0(\"SUBJ-\", row_number()),\n    LBTESTCD = \"CD4\",\n    LBTEST = \"CD4+ T-cell Count\",\n    LBORRES = cd40,\n    LBORRESU = \"cells/mm3\",\n    LBSTRESC = as.character(cd40),\n    VISIT = \"Baseline\") %>%\n  dplyr::select(STUDYID, USUBJID, LBTESTCD, LBTEST, LBORRES,\n                LBORRESU, LBSTRESC, VISIT)\n\nlb_cd4_weeks <- aids_df %>%\n  dplyr::mutate(\n    STUDYID = \"AIDS01\",  # fixed study identifier\n    USUBJID = paste0(\"SUBJ-\", row_number()),\n    LBTESTCD = \"CD4\",\n    LBTEST = \"CD4+ T-cell Count\",\n    LBORRES = cd420,\n    LBORRESU = \"cells/mm3\",\n    LBSTRESC = as.character(cd420),\n    VISIT = \"20±5 weeks\") %>%\n  dplyr::select(STUDYID, USUBJID, LBTESTCD, LBTEST, LBORRES,\n                LBORRESU, LBSTRESC, VISIT)\n\nlb_cd8 <- aids_df %>%\n  dplyr::mutate(\n    STUDYID = \"AIDS01\",  # fixed study identifier\n    USUBJID = paste0(\"SUBJ-\", row_number()),\n    LBTESTCD = \"CD8\",\n    LBTEST = \"CD8+ T-cell Count\",\n    LBORRES = cd80,\n    LBORRESU = \"cells/mm3\",\n    LBSTRESC = as.character(cd80),\n    VISIT = \"Baseline\") %>%\n  dplyr::select(STUDYID, USUBJID, LBTESTCD, LBTEST, LBORRES,\n                LBORRESU, LBSTRESC, VISIT)\n\n\nlb_cd8_weeks <- aids_df %>%\n  dplyr::mutate(\n    STUDYID = \"AIDS01\",  # fixed study identifier\n    USUBJID = paste0(\"SUBJ-\", row_number()),\n    LBTESTCD = \"CD8\",\n    LBTEST = \"CD8+ T-cell Count\",\n    LBORRES = cd820,\n    LBORRESU = \"cells/mm3\",\n    LBSTRESC = as.character(cd820),\n    VISIT = \"20±5 weeks\") %>%\n  dplyr::select(STUDYID, USUBJID, LBTESTCD, LBTEST, LBORRES,\n                LBORRESU, LBSTRESC, VISIT)\n\n# bind to create a unique domain\nlb <- rbind(lb_cd4, lb_cd4_weeks,\n            lb_cd8, lb_cd8_weeks)\n\n# Save as CSV in your working directory\nwrite.csv(lb, \"data/lb.csv\", row.names = FALSE)\n\nhead(lb, 6)\n```\n\n</div>\n\n\n## ADaM Overview {#adam-overview}\n\nThe ADaM (Analysis Data Model) standard was developed by CDISC to structure clinical trial datasets for statistical analysis. ADaM datasets are derived from SDTM and organized to facilitate statistical programming, as well as the creation of tables, listings, and graphs (TLGs) - more details below. They follow strict rules for traceability, ensuring that every variable can be linked back to its source in SDTM.\n\n<div class=\"content-box\">\n\n### Subject-Level Analysis Dataset (ADSL)\n\n**ADSL** contains one record per subject and provides key demographic and treatment information that serves as the foundation for most analyses. Its main characteristics include:\n\n-   Structure: one record per subject.\n-   Key variables: `STUDYID`, `USUBJID`, `AGE`, `SEX`, `RACE`, `ARM`, and `ACTARM`.\n-   Includes treatment start and end dates, discontinuation status, and other derived variables useful for subgroup analyses.\n\nTo check how manually construct **ADSL** data using SDTM domains, click to show code.\n\n```{r, message=FALSE, warning=FALSE, echo=TRUE}\n# Load packages\nlibrary(tidyverse)\n\n\n# Load SDTM domains\ndm <- read.csv(\"data/dm.csv\")\nmh <- read.csv(\"data/mh.csv\")\nsc <- read.csv(\"data/sc.csv\")\nex <- read.csv(\"data/ex.csv\")\nlb <- read.csv(\"data/lb.csv\")\n\n# -------------------------------------------------------------------------------------------\n# Start from DM (1 line per subject guaranteed)\nadsl <- dm %>%\n  # Merge with SC for baseline Karnofsky and symptoms\n  left_join(\n    sc %>% \n      filter(SCTESTCD == \"KARNOFSKY\", VISIT == \"Baseline\") %>%\n      select(USUBJID, SCORRES) %>%\n      rename(KARNOF = SCORRES),\n    by = \"USUBJID\"\n  ) %>%\n  left_join(\n    sc %>% \n      filter(SCTESTCD == \"SYMPTOM\", VISIT == \"Baseline\") %>%\n      select(USUBJID, SCSTRESC) %>%\n      rename(SYMPTOM = SCSTRESC),\n    by = \"USUBJID\"\n  ) %>%\n  # Merge with MH for key medical history\n  left_join(\n    mh %>%\n      filter(MHDECOD == \"HEMOPHILIA\") %>%\n      select(USUBJID, MHSTRESC) %>%\n      rename(HEMO = MHSTRESC),\n    by = \"USUBJID\"\n  ) %>%\n  left_join(\n    mh %>%\n      filter(MHDECOD == \"INTRAVENOUS DRUG USE\") %>%\n      select(USUBJID, MHSTRESC) %>%\n      rename(IVDRUG = MHSTRESC),\n    by = \"USUBJID\"\n  ) %>%\n  mutate(\n    STUDYID = \"AIDS01\",\n    TRTSDT = as.Date(\"2025-01-01\"),  # treatment start date\n    TRTEDT = as.Date(\"2025-12-01\")   # treatment end date \n  )\n\n# Save ADSL\nwrite.csv(adsl, \"data/adsl.csv\", row.names = FALSE)\n\n# Preview\nhead(adsl)\n```\n\n### Laboratory Results Analysis Dataset (ADLB)\n\n**ADLB** is the dataset for laboratory test results. It contains repeated measures per subject across study visits, enabling assessment of trends, changes, and treatment-related effects. Its main characteristics include: - Structure: one record per subject per laboratory parameter per visit. - Key variables: `STUDYID`, `USUBJID`, `PARAM`, `AVISIT`, `AVAL`(numeric result), `BASE`, and `CHG` (change from baseline). - Supports analyses such as mean comparisons between treatment arms, evaluation of clinically relevant changes, and categorization of results outside reference ranges.\n\nTo check how manually construct **ADLB** data using SDTM domains, click to show code.\n\n```{r, message=FALSE, warning=FALSE, echo=TRUE}\n# ADLB\nadlb <- lb %>%\n  left_join(dm %>% select(USUBJID, ARM, ARMCD), by = \"USUBJID\") %>%\n  group_by(USUBJID, LBTESTCD) %>%\n  arrange(VISIT) %>%\n  mutate(\n    PARAMCD = LBTESTCD,\n    PARAM = LBTEST,\n    AVAL = LBORRES,\n    AVALU = LBORRESU\n  ) %>%\n  ungroup() %>%\n  select(STUDYID, USUBJID, ARM, ARMCD, VISIT, PARAMCD, PARAM, AVAL, AVALU)\n\n# Save ADSL\nwrite.csv(adlb, \"data/adlb.csv\", row.names = FALSE)\n\n# Preview\nhead(adlb)\n```\n\n</div>\n\n## TGLs Overview {#tgls-overview}\n\nTables, Listings, and Graphs (TLGs) are the final outputs generated from ADaM datasets to support clinical trial reporting. They are designed to provide clear, standardized summaries of study results that can be reviewed by clinicians, statisticians, and regulatory agencies.\n\nThe main objectives of TLGs are:\n\n-   **Tables**: summarize patient characteristics, efficacy, and safety data with descriptive and inferential statistics.\n-   **Listings**: display subject-level data in detail, allowing reviewers to trace back results to individual participants.\n-   **Graphs**: visually represent trends, distributions, and treatment effects to complement tabular summaries.\n\n<div class=\"content-box\">\n\n### TGLs Implemented in this project\n\nIn this pipeline, I created a set of TLGs using **ADSL** (demographics) and **ADLB** (laboratory data):\n\n#### **Demographics and Baseline Characteristics (ADSL)**:\n\n-   Table summarizing sex, age, and race distribution by treatment arm.\n-   Graphs showing proportions of sex and race across arms.\n-   Histogram of age distribution by treatment.\n\nTo check how to create **ADSL** TGLs, click to show code.\n\n```{r, message=FALSE, warning=FALSE, echo=TRUE}\n# Finally, I will create tables, graphs and lists (TGLs) using the clinical data \n# Load packages\nlibrary(tidyverse)\nlibrary(rtables)\nlibrary(ggplot2)\n\n\n# Load datasets\nadsl <- read.csv(\"data/adsl.csv\")\nadlb <- read.csv(\"data/adlb.csv\")\n\n# ----------------------------------------------------------------------------------------------------\n# Table N per ARMCD/SEX/RACE\n# Change sex labels for graph\nadsl_lbl <- adsl %>%\n  dplyr::mutate(\n    SEX = dplyr::recode(SEX,\n                        \"M\" = \"Male\",\n                        \"F\" = \"Female\"))\n\nadsl_lbl <- adsl_lbl %>%\n  dplyr::mutate(\n    RACE = dplyr::recode(RACE,\n                        \"WHITE\" = \"White\",\n                        \"NON-WHITE\" = \"Non-white\"))\n\n# Create basic rtable\ntbl <- basic_table(show_colcounts = TRUE) %>%\n  split_cols_by(\"ARM\") %>%\n  add_overall_col(\"TOTAL\") %>%\n  split_rows_by(\"SEX\",\n                split_label = \"Subject Sex\",\n                label_pos = \"topleft\") %>%\n  summarize_row_groups() %>%\n  analyze(\"AGE\",\n          var_labels = \"Age (years)\",\n          afun = function(x, .N_col) {\n            m <- mean(x, na.rm = TRUE)\n            med <- median(x, na.rm = TRUE)\n            q1 <- quantile(x, 0.25, na.rm = TRUE)\n            q3 <- quantile(x, 0.75, na.rm = TRUE)\n            mi <- min(x, na.rm = TRUE)\n            ma <- max(x, na.rm = TRUE)\n            \n            in_rows(\n              \"Mean\"     = sprintf(\"%.1f\", m),\n              \"Median\"   = sprintf(\"%.1f\", med),\n              \"Q1\"       = sprintf(\"%.1f\", q1),\n              \"Q3\"       = sprintf(\"%.1f\", q3),\n              \"Min\"      = sprintf(\"%.1f\", mi),\n              \"Max\"      = sprintf(\"%.1f\", ma)\n            )\n          }) %>%\n  analyze(\"RACE\", var_labels = \"Race\",\n          afun = function(x, .N_col) {\n            tab <- table(x)\n            res <- sprintf(\"%d (%.1f%%)\", tab, 100 * tab / .N_col)\n            in_rows(.list = as.list(res), .labels = names(tab))\n          })\n\ntbl_final <- build_table(tbl, adsl_lbl)\n\n# Titles & Footers\nmain_title(tbl_final) <- \"Demographics and Baseline Characteristics of Patients with Acquired Immunodeficiency Syndrome (AIDS) by Treatment Arm.\"\nsubtitles(tbl_final) <- \"Summary of sex, age, and race distribution in the Safety Population.\"\nmain_footer(tbl_final) <- c(\"Mean = arithmetic average; Median = 50th percentile; Q1/Q3 = 25th and 75th percentiles; Min/Max = extreme values.\")\nprov_footer(tbl_final) <- \"Safety Population includes all randomized patients with AIDS who received at least one dose of study treatment.\"\n\ntbl_final\n\n# Graphs\n# Sex percentage per group\nggplot(adsl_lbl, aes(x = ARMCD, fill = SEX)) +\n  geom_bar(position = \"fill\", color = \"white\", width = 0.5, alpha = 0.7) +\n  scale_y_continuous(labels = scales::percent) +\n  scale_fill_manual(values = c(\"Male\" = \"#B3B3B3\", \"Female\" = \"#A6D854\")) +\n  labs(title = \"Sex Distribution by Treatment Arm\",\n       x = \"Treatment Arm\", y = \"Percentage\",\n       fill = \"Sex\") +\n  theme_minimal(base_size = 12) +\n  theme(\n    panel.grid.major.x = element_blank(),\n    panel.grid.minor = element_blank(),\n    panel.grid.major.y = element_line(color = \"grey90\"),\n    legend.position = \"top\",\n    legend.title = element_blank(),\n    plot.title = element_text(hjust = 0.5, face = \"bold\")\n  )\n\n# Race summary\nggplot(adsl_lbl, aes(x = ARMCD, fill = RACE)) +\n  geom_bar(position = \"fill\", color = \"white\", width = 0.5,  alpha = 0.7) +\n  scale_y_continuous(labels = scales::percent) +\n  scale_fill_manual(values = c(\"White\" = \"#66C2A5\", \"Non-white\" = \"#FC8D62\")) +\n  labs(title = \"Race Distribution by Treatment Arm\",\n       x = \"Treatment Arm\", y = \"Percentage\",\n       fill = \"Race\") +\n  theme_minimal(base_size = 12) +\n  theme(\n    panel.grid.major.x = element_blank(),\n    panel.grid.minor = element_blank(),\n    panel.grid.major.y = element_line(color = \"grey90\"),\n    legend.position = \"top\",\n    legend.title = element_blank(),\n    plot.title = element_text(hjust = 0.5, face = \"bold\")\n  )\n\n\n# Age summary\nggplot(adsl, aes(x = AGE, fill = ARM)) +\n  geom_histogram(binwidth = 5, position = \"dodge\", alpha = 0.7) +\n  scale_fill_brewer(palette = \"Set2\") +  # paleta discreta\n  labs(\n    title = \"Age Distribution by Treatment Arm\",\n    x = \"Age (years)\",\n    y = \"Number of Patients\",\n    fill = \"Treatment Arm\"\n  ) +\n  theme_minimal(base_size = 12) +\n  theme(\n    plot.title = element_text(hjust = 0.5, face = \"bold\"),\n    legend.position = \"top\",\n    legend.title = element_text(face = \"bold\"),\n    panel.grid.minor = element_blank()\n  )\n\n```\n\n#### **Laboratory Test Results (ADLB)**:\n\n-   Tables summarizing baseline and follow-up laboratory results (mean, median, quartiles, min/max).\n-   Graph showing proportions T cell count (CD4+ and CD8+) across arms.\n\nTo check how to create **ADLB** TGLs, click to show code.\n\n```{r, message=FALSE, warning=FALSE, echo=TRUE}\n# ----------------------------------------------------------------------------------------------------\n# Merge lab data from adsl to adlb\nadlb_merged <- adlb %>%\n  left_join(\n    adsl %>% select(USUBJID, SYMPTOM, HEMO, KARNOF, IVDRUG),\n    by = \"USUBJID\"\n  )\n\nadlb_merged$VISIT <- factor(adlb_merged$VISIT, levels = c(\"Baseline\", \"20±5 weeks\")) # Order patient visit as baseline first\n\n\n# Create basic rtable\ntbl_lab <- basic_table(show_colcounts = TRUE) %>%\n  split_cols_by(\"VISIT\") %>%\n  split_rows_by(\"ARM\",\n                split_label = \"Treatment arm\",\n                label_pos = \"topleft\") %>%\n  split_rows_by(\"PARAM\",\n                split_label = \"Laboratory test\",\n                label_pos = \"topleft\") %>%\n  analyze(\"AVAL\", var_labels = \"Value (AVAL)\", \n          afun = function(x, .N_col) {\n            in_rows(\n              \"Mean\"   = sprintf(\"%.1f\", mean(x, na.rm = TRUE)),\n              \"Median\" = sprintf(\"%.1f\", median(x, na.rm = TRUE)),\n              \"Q1\"     = sprintf(\"%.1f\", quantile(x, 0.25, na.rm = TRUE)),\n              \"Q3\"     = sprintf(\"%.1f\", quantile(x, 0.75, na.rm = TRUE)),\n              \"Min\"    = sprintf(\"%.1f\", min(x, na.rm = TRUE)),\n              \"Max\"    = sprintf(\"%.1f\", max(x, na.rm = TRUE))\n            )\n          })\n\ntbl_lab <- build_table(tbl_lab, adlb_merged)\n\n# Titles & Footers\nmain_title(tbl_lab) <- \"Laboratory Test Results of Patients with Acquired Immunodeficiency Syndrome (AIDS) by Treatment Arm\"\nsubtitles(tbl_lab) <- \"Summary statistics (Mean, Median, Q1, Q3, Min, Max) for immunological laboratory parameters at each visit\"\nmain_footer(tbl_lab) <- c(\n  \"Mean = arithmetic average; Median = 50th percentile; Q1/Q3 = 25th and 75th percentiles; Min/Max = extreme values.\")\nprov_footer(tbl_lab) <- \"Safety Population includes all randomized patients with AIDS who had laboratory assessments at baseline and follow-up visits.\"\n\ntbl_lab\n\n# Create graph to show T cell counts by treatment\n# Average laboratory values by treatment arm\nadlb_summary <- adlb_merged %>%\n  group_by(ARM, PARAM) %>%\n  summarise(mean_val = mean(AVAL, na.rm = TRUE), .groups = \"drop\")\n\n\nggplot(adlb_merged, aes(x = PARAM, y = AVAL, fill = ARM)) +\n  geom_col(data = adlb_summary, aes(x = PARAM, y = mean_val, fill = ARM),\n           position = position_dodge(width = 0.8), alpha = 0.6) +  # barras de média\n  geom_jitter(aes(color = ARM), \n              position = position_jitterdodge(jitter.width = 0.15, dodge.width = 0.8),\n              size = 1, alpha = 0.5, show.legend = FALSE) +  # pontos individuais\n  scale_fill_brewer(palette = \"Set2\") +\n  scale_color_brewer(palette = \"Set2\") +\n  labs(\n    title = \"Mean Laboratory Values and Individual Patient Measurements by Treatment Arm\",\n    x = \"Laboratory Parameter\",\n    y = \"Value\",\n    fill = \"Treatment Arm\"\n  ) +\n  theme_minimal(base_size = 12) +\n  theme(\n    plot.title = element_text(hjust = 0.5, face = \"bold\"),\n    axis.text.x = element_text(angle = 30, hjust = 1, face = \"bold\"),\n    legend.position = \"top\",\n    legend.title = element_text(face = \"bold\")\n  )\n\n```\n\n</div>"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"toc-depth":4,"include-in-header":[{"text":"<!-- Font Awesome -->\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css\">\n<!-- Google Fonts -->\n<link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;700&display=swap\" rel=\"stylesheet\">\n<style>\n  body {\n    font-family: 'Noto Sans', sans-serif;\n    background-color: #f5f5f5; /* cinza claro de fundo */\n  }\n  .content-box {\n    max-width: 900px;         /* largura máxima da caixa */\n    margin: 40px auto;        /* centraliza */\n    background: #ffffff;      /* caixa branca */\n    padding: 40px;            /* respiro interno */\n    border-radius: 12px;      /* cantos arredondados */\n    box-shadow: 0 4px 12px rgba(0,0,0,0.1); /* sombra suave */\n  }\n</style>\n"}],"output-file":"pipeline.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Show code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.353","theme":"lux","title":"Clinical Data Transformation Pipeline"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}